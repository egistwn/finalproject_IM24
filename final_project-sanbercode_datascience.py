# -*- coding: utf-8 -*-
"""Final_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zMdNLXr0DnVI54rMWFKa4tw5Svuq2vyZ

**Case for Final Project Data Science Sanbercode, May 2021**
"""

import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

df = pd.read_csv('Data_Negara_HELP.csv')
df.set_index('Negara', inplace=True)
df.head()

df_ori = pd.read_csv('Data_Negara_HELP.csv')
df_ori

#cek NAN
df.isnull().sum()

sns.boxplot('Kematian_anak', data=df)

sns.boxplot('Ekspor', data=df)

#code here
#fungsi handling outlier
def finding_outlier(df):
  Q1 = df.quantile(0.25)
  Q3 = df.quantile(0.75)
  IQR = Q3-Q1
  df_final = df[(df<(Q1-(1.5*IQR))) | (df>(Q3+(1.5*IQR)))]
  return df_final

#Handling outlier
print(finding_outlier(df['Kematian_anak']))
print(finding_outlier(df['Ekspor']))
print(finding_outlier(df['Kesehatan']))
print(finding_outlier(df['Impor']))
print(finding_outlier(df['Pendapatan']))
print(finding_outlier(df['Inflasi']))
print(finding_outlier(df['Harapan_hidup']))
print(finding_outlier(df['Jumlah_fertiliti']))
print(finding_outlier(df['GDPperkapita']))

#fungsi remove outlier
def remove_outlier(df):
  Q1 = df.quantile(0.25)
  Q3 = df.quantile(0.75)
  IQR = Q3-Q1
  #dfx = df[(df>(Q1-(1.5*IQR))) & (df<(Q3+(1.5*IQR)))]
  dfx = df[df<(Q3+(1.5*IQR))]
  return dfx

#remove outlier
df2 = remove_outlier(df[['Kematian_anak','Ekspor', 'Kesehatan', 'Impor', 'Pendapatan', 'Inflasi', 'Harapan_hidup', 'Jumlah_fertiliti', 'GDPperkapita']])
df2.dropna(axis=0, inplace=True)
df2

#feature scalling
from sklearn.preprocessing import StandardScaler

sc = StandardScaler()
df_std = sc.fit_transform(df2)

#Elbow method

from sklearn.cluster import KMeans

wcss = []
for i in range(1,11):
  kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)
  kmeans.fit(df_std)
  wcss.append(kmeans.inertia_)

plt.figure(figsize=(12,8))
plt.plot(range(1,11), wcss)
plt.title('Elbow method')
plt.xlabel('n_clusters')
plt.ylabel('wcss')

plt.show()

#clustering with KMeans

from sklearn.cluster import KMeans

kmeans1 = KMeans(n_clusters = 3, random_state=42).fit(df_std)
labels1 = kmeans1.labels_
labels1

#set new data after labels
new_df = pd.DataFrame(data=df_std, columns=['Kematian_anak','Ekspor', 'Kesehatan', 'Impor', 'Pendapatan', 'Inflasi', 'Harapan_hidup', 'Jumlah_fertiliti', 'GDPperkapita'])
new_df['label1_kmeans'] = labels1
new_df['Negara'] = df_ori['Negara']
new_df

plt.figure(figsize=(12,8))

plt.scatter(new_df['GDPperkapita'][new_df.label1_kmeans==0], new_df['Kesehatan'][new_df.label1_kmeans==0], c='blue', s=200, edgecolors='w')
plt.scatter(new_df['GDPperkapita'][new_df.label1_kmeans==1], new_df['Kesehatan'][new_df.label1_kmeans==1], c='red', s=200, edgecolors='w')
plt.scatter(new_df['GDPperkapita'][new_df.label1_kmeans==2], new_df['Kesehatan'][new_df.label1_kmeans==2], c='green', s=200, edgecolors='w')
plt.scatter(kmeans1.cluster_centers_[:,0], kmeans1.cluster_centers_[:,0], c='k', s=300)

plt.xlabel('GDP Perkapita')
plt.ylabel('Kesehatan')
plt.show()

plt.figure(figsize=(12,8))

plt.scatter(new_df['GDPperkapita'][new_df.label1_kmeans==0], new_df['Kematian_anak'][new_df.label1_kmeans==0], c='blue', s=200, edgecolors='w')
plt.scatter(new_df['GDPperkapita'][new_df.label1_kmeans==1], new_df['Kematian_anak'][new_df.label1_kmeans==1], c='red', s=200, edgecolors='w')
plt.scatter(new_df['GDPperkapita'][new_df.label1_kmeans==2], new_df['Kematian_anak'][new_df.label1_kmeans==2], c='green', s=200, edgecolors='w')

plt.scatter(kmeans1.cluster_centers_[:,0], kmeans1.cluster_centers_[:,0], c='k', s=300)

plt.xlabel('GDP Perkapita')
plt.ylabel('Kematian Anak')
plt.show()

#cluster2
cluster2 = new_df[new_df['label1_kmeans']==2]
cluster2.head()

#cluster 2 = hijau
list1 = cluster2.sort_values('GDPperkapita')

list2 = list1['Negara']

list2.reset_index()

"""**Finished**"""

plt.figure(figsize=(12,8))

plt.scatter(new_df['GDPperkapita'][new_df.label1_kmeans==0], new_df['Inflasi'][new_df.label1_kmeans==0], c='blue', s=200, edgecolors='w')
plt.scatter(new_df['GDPperkapita'][new_df.label1_kmeans==1], new_df['Inflasi'][new_df.label1_kmeans==1], c='green', s=200, edgecolors='w')
plt.scatter(new_df['GDPperkapita'][new_df.label1_kmeans==2], new_df['Inflasi'][new_df.label1_kmeans==2], c='red', s=200, edgecolors='w')

plt.scatter(kmeans1.cluster_centers_[:,0], kmeans1.cluster_centers_[:,0], c='k', s=300)

plt.xlabel('GDP Perkapita')
plt.ylabel('Inflasi')
plt.show()

plt.figure(figsize=(12,8))
sns.heatmap(df2.corr(), annot=True, fmt='.2g');